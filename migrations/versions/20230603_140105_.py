"""empty message

<<<<<<<< HEAD:migrations/versions/20230604102406_.py
Revision ID: d917eb475a1c
Revises:
Create Date: 2023-06-04 10:24:06.336261
========
Revision ID: 2eb431dc37e6
Revises: 
Create Date: 2023-06-03 14:01:05.330602
>>>>>>>> a07b892c46f1d03c67abd8a71b9085573b01e55b:migrations/versions/20230603_140105_.py

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
<<<<<<<< HEAD:migrations/versions/20230604102406_.py
revision = 'd917eb475a1c'
========
revision = '2eb431dc37e6'
>>>>>>>> a07b892c46f1d03c67abd8a71b9085573b01e55b:migrations/versions/20230603_140105_.py
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=20), nullable=False),
    sa.Column('last_name', sa.String(length=20), nullable=False),
    sa.Column('buying_power', sa.Float(), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('market_cap', sa.Float(), nullable=False),
    sa.Column('pe_ratio', sa.Float(), nullable=False),
    sa.Column('dividend', sa.Float(), nullable=True),
    sa.Column('stock_ceo', sa.String(length=40), nullable=True),
    sa.Column('employees', sa.Integer(), nullable=True),
    sa.Column('headquarters', sa.String(), nullable=True),
    sa.Column('year_founded', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('watch_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('watch_list_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['watch_list_id'], ['watch_lists.id'], ),
    sa.PrimaryKeyConstraint('watch_list_id', 'stock_id')
    )
    op.create_table('stock_historys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('time_stamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('time_stamp', sa.DateTime(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('price_purchased', sa.Float(), nullable=True),
    sa.Column('price_sold', sa.Float(), nullable=True),
    sa.Column('purchased', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
<<<<<<<< HEAD:migrations/versions/20230604102406_.py
    op.drop_table('transactions')
    op.drop_table('stock_historys')
    op.drop_table('watch_list_items')
========
    op.drop_table('items')
>>>>>>>> a07b892c46f1d03c67abd8a71b9085573b01e55b:migrations/versions/20230603_140105_.py
    op.drop_table('watch_lists')
    op.drop_table('stocks')
    op.drop_table('users')

    # ### end Alembic commands ###
